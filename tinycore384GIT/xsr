#!/bin/sh
. /etc/init.d/tc-functions
#(echo 77 ; sleep 1) | Xdialog --progress 8 20 100

createLangMenu (){
#============================
#LANGUAGE MENU
#============================

sudo echo "[Desktop Entry]"									>/home/tc/tinycore-gr.desktop
sudo echo "Name=aGR"										>>/home/tc/tinycore-gr.desktop
sudo echo "Exec=aterm -e xmodmap /home/tc/gr" 				>>/home/tc/tinycore-gr.desktop
sudo echo "Type=Application"								>>/home/tc/tinycore-gr.desktop
#sudo echo "OnlyShowIn=Old;" 								>>/home/tc/tinycore-gr.desktop
sudo echo "Categories=Utility;" 							>>/home/tc/tinycore-gr.desktop

sudo echo "[Desktop Entry]"									>/home/tc/tinycore-en.desktop
sudo echo "Name=aEN"										>>/home/tc/tinycore-en.desktop
sudo echo "Exec=aterm -e xmodmap /home/tc/en" 				>>/home/tc/tinycore-en.desktop
sudo echo "Type=Application" 								>>/home/tc/tinycore-en.desktop
#sudo echo "OnlyShowIn=Old;" 								>>/home/tc/tinycore-en.desktop
sudo echo "Categories=Utility;" 							>>/home/tc/tinycore-en.desktop


#PUT the language selection in system tools
	#sudo chmod 775 /usr/share/applications
	#sudo mv /home/tontrol sequencesc/tinycore-gr.desktop /usr/share/applications/tinycore-gr.desktop
	#sudo mv /home/tc/tinycore-en.desktop /usr/share/applications/tinycore-en.desktop


#PUT the language selection in applications menu
sudo mkdir -p /usr/local/share/applications
sudo chmod 775 /usr/local/share/applications

sudo mv /home/tc/tinycore-gr.desktop /usr/local/share/applications/tinycore-gr.desktop
sudo mv /home/tc/tinycore-en.desktop /usr/local/share/applications/tinycore-en.desktop

}
#===========================================

createCron(){
																		#echo "" 				> /home/tc/log

	echo "count=0;" 						> /home/tc/cron
	echo "while [ $""count -lt 60 ];"		>> /home/tc/cron
	echo "do"								>> /home/tc/cron
																		#echo "echo "tettt45t45t"" 		>> /home/tc/cron
	echo "pidof  Xvesa >/dev/null" 			>> /home/tc/cron
	echo "if [[ $""? -ne 0 ]];"				>> /home/tc/cron
	echo "then"								>> /home/tc/cron
																		#echo "echo telnet >> /home/tc/log" 	>> /home/tc/cron
																		#echo "kill $(ps aux | grep "telnet" | awk '{print $1 }')"  >> /home/tc/cron
																		#echo "kill $""(pidof telnet)"  		>> /home/tc/cron
	echo "pidof  telnet >/dev/null" 		>> /home/tc/cron

	echo "if [[ $""? -eq 0 ]];"				>> /home/tc/cron

	echo "then"								>> /home/tc/cron
																		#echo "pkill -SIGINT telnet"  		>> /home/tc/cron
																		#echo "pkill -INT telnet"  		>> /home/tc/cron
	echo "pkill -TERM telnet"  				>> /home/tc/cron
	echo "pkill sleep"  					>> /home/tc/cron
																		#echo "kill $""(pidof telnet)"  		>> /home/tc/cron
	echo "echo -e '\r'"						>> /home/tc/cron
	echo "echo -e '\cc'"					>> /home/tc/cron

	echo "fi"								>> /home/tc/cron
	echo "exit"								>> /home/tc/cron	
	echo "fi"								>> /home/tc/cron
	echo "sleep 10"							>> /home/tc/cron
	echo "done"								>> /home/tc/cron
}

#===========================================

staticIP() {
sudo pkill udhcpc
sudo ifconfig eth0 192.168.1.30 netmask 255.255.255.0 broadcast 192.168.1.255 up
sudo route add default gw 192.168.1.1
#sudo echo nameserver 8.8.8.8 > /etc/resolv.conf
#sudo echo nameserver 8.8.4.4 >> /etc/resolv.conf
}
#===========================================

getXSRmenuConf(){
echo "to accept the default configuration user=user01 and password=123456 linux-serverIP=192.168.1.111 press return for each option"

read -p "Enter Username = " USER
read -p "Enter Password = " PASS
read -p "Enter Server IP = " getSerIP
rtn='
'
if [ $USER ==  $rtn ]
	then
	USER=user01
fi

if [ $PASS ==  $rtn ]
	then
	PASS=123456
fi


if [ $getSerIP ==  $rtn ]
	then
	getSerIP=192.168.1.111
fi
	
XSRmenu $USER $PASS $getSerIP
}

#===========================================
readOptions(){
	local choice
	read -p "Enter choice [ 1 - 3] " choice
	echo ""
	echo ""
	echo "---------------------"
	echo ""
	echo ""
	case $choice in
		1) getXSRmenuConf ;;
		2) getRDPmenuConf ;;
		#*) exit;;
		#*) killall Xvesa;kill $(ps aux | grep "telnet" | awk '{print $1 }');;

	esac
}
#===========================================

showMenu() {
	clear
	
#yel=$'\033[0;33m'
#whi=$'\033[0;0m'
				
	echo ${WHITE}	"             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"	
	echo ${GREEN}	"                         M A I N - M E N U             "
	echo ${WHITE}	"             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	echo ${YELLOW}	"                         1. X Connection               "
	echo ${WHITE}	"(The linux Server must have installed Telnet Server and the Lxpanel)"
	echo ${YELLOW}	"                         2. RDP Connection             "
	echo ${WHITE}	"     (The linux Server must have installed VirtualBox Machines"
	echo ${WHITE}	"               or you have a Windows Terminal Server)"
	#echo "3. Exit"
	
}

#===========================================

XSRmenu() {
USER=$1
PASS=$2
getSerIP=$3
startx

sh cron &

aterm -e sh -c 'hsetroot -fill /opt/backgrounds/win10.jpg;xmodmap /home/tc/en'
#lxpanel
(echo " Welcome Please Wait...";echo -e "\r";sleep 10;echo $USER;echo -e "\r";sleep 3;echo $PASS; echo -e "\r";sleep 3;echo "export DISPLAY=$getLocIP:0";echo -e "\r";sleep 3;echo "lxpanel";echo -e "\r";sleep 60000)|telnet $getSerIP >/dev/null &

#xfce4-panel
#(echo " Welcome Please Wait...";echo -e "\r";sleep 10;echo $USER;echo -e "\r";sleep 3;echo $PASS; echo -e "\r";sleep 3;echo "export DISPLAY=$getLocIP:0";echo -e "\r";sleep 3;echo "xfce4-panel";echo -e "\r";sleep 60000)|telnet $getSerIP >/dev/null &

}

#===========================================

RDPmenu() {
echo $getSerIP;read -p "Input RDP SERVER Username = " USER;read -p "Input RDP SERVER Password = " PASS;rdesktop -f -p $PASS -u $USER $getSerIP || exit 0
}

#===========================================

allowXConnection(){
sudo sed -i -e 's/-nolisten/-ac/' /home/tc/.xsession
sudo sed -i -e 's/tcp//' /home/tc/.xsession
}
testMenu(){
TARGET="$HOME"/.wmx/Applications

for F in $(ls); do
      writeFLWMitem "$F"
    done
[ -G /tmp/.X11-unix/X0 ] && [ $(which "$DESKTOP"_restart) ] && "$DESKTOP"_restart

}



changeResolution(){
VGA=$1
sudo sed -i -e 's/1024x768x32/'$VGA'/' /home/tc/.xsession
}




configSysMenu(){
	
	
	sudo mv /usr/share/applications/tinycore-aterm.desktop  /usr/share/applications/tinycore-aterm
	sudo rm -rf /usr/share/applications/*.desktop  >/dev/null
	sudo mv /usr/share/applications/tinycore-aterm  /usr/share/applications/tinycore-aterm.desktop
}


checkNet(){
#=====================
#WAIT FOR NETWORK (I MUST EXAMINE)
#=====================
count=0
#echo -n Waiting for the network...
while [ "$count" -lt 60 ]; 
do
ifconfig eth0 | grep -q inet && break
sleep 1
count=$((count + 1))
echo -n .
done
getLocIP=`ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`

}




########################################################################################
#MAIN PROGRAM
########################################################################################
testMenu

VGA="800x600x16"
#getSerIP=192.168.1.111
trap "echo 'Please do not do this'" HUP INT TERM TSTP QUIT
configSysMenu
createLangMenu
changeResolution $VGA
allowXConnection
createCron
checkNet



#aterm -e sh -c 'hsetroot -full /opt/backgrounds/win10.jpg;xmodmap /home/tc/en'




#=============================================
#endless loop for initial screen choice
#=============================================
count=0
while [ "$count" -lt 60 ]; 
do
showMenu
readOptions
sleep 1
#count=$((count + 1))
done





